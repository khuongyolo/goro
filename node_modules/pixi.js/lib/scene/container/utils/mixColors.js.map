{"version":3,"file":"mixColors.js","sources":["../../../../src/scene/container/utils/mixColors.ts"],"sourcesContent":["import { mixHexColors } from './mixHexColors';\n\nconst WHITE_WHITE = 0xFFFFFF + (0xFFFFFF << 32);\n\nexport function mixColors(localBGRColor: number, parentBGRColor: number)\n{\n    if (localBGRColor + (parentBGRColor << 32) !== WHITE_WHITE)\n    {\n        // color has changed!\n        if (localBGRColor === 0xFFFFFF)\n        {\n            return parentBGRColor;\n        }\n        else if (parentBGRColor === 0xFFFFFF)\n        {\n            return localBGRColor;\n        }\n\n        return mixHexColors(localBGRColor, parentBGRColor, 0.5);\n    }\n\n    return 0xFFFFFF;\n}\n\nexport function mixStandardAnd32BitColors(localColorRGB: number, localAlpha: number, parentColor: number)\n{\n    const parentAlpha = ((parentColor >> 24) & 0xFF) / 255;\n\n    const globalAlpha = ((localAlpha * parentAlpha) * 255);\n\n    // flip rgb to bgr\n    const localBGRColor = ((localColorRGB & 0xFF) << 16) + (localColorRGB & 0xFF00) + ((localColorRGB >> 16) & 0xFF);\n\n    const parentBGRColor = parentColor & 0x00FFFFFF;\n\n    let sharedBGRColor = 0xFFFFFF;\n\n    if (localBGRColor + (parentBGRColor << 32) !== WHITE_WHITE)\n    {\n        // color has changed!\n        if (localBGRColor === 0xFFFFFF)\n        {\n            sharedBGRColor = parentBGRColor;\n        }\n        else if (parentBGRColor === 0xFFFFFF)\n        {\n            sharedBGRColor = localBGRColor;\n        }\n\n        else\n        {\n            sharedBGRColor = mixHexColors(localBGRColor, parentBGRColor, 0.5);\n        }\n    }\n\n    return sharedBGRColor + (globalAlpha << 24);\n}\n\n"],"names":["mixHexColors"],"mappings":";;;;;AAEA,MAAM,WAAA,GAAc,YAAY,QAAY,IAAA,EAAA,CAAA,CAAA;AAE5B,SAAA,SAAA,CAAU,eAAuB,cACjD,EAAA;AACI,EAAI,IAAA,aAAA,IAAiB,cAAkB,IAAA,EAAA,CAAA,KAAQ,WAC/C,EAAA;AAEI,IAAA,IAAI,kBAAkB,QACtB,EAAA;AACI,MAAO,OAAA,cAAA,CAAA;AAAA,KACX,MAAA,IACS,mBAAmB,QAC5B,EAAA;AACI,MAAO,OAAA,aAAA,CAAA;AAAA,KACX;AAEA,IAAO,OAAAA,yBAAA,CAAa,aAAe,EAAA,cAAA,EAAgB,GAAG,CAAA,CAAA;AAAA,GAC1D;AAEA,EAAO,OAAA,QAAA,CAAA;AACX,CAAA;AAEgB,SAAA,yBAAA,CAA0B,aAAuB,EAAA,UAAA,EAAoB,WACrF,EAAA;AACI,EAAM,MAAA,WAAA,GAAA,CAAgB,WAAe,IAAA,EAAA,GAAM,GAAQ,IAAA,GAAA,CAAA;AAEnD,EAAM,MAAA,WAAA,GAAgB,aAAa,WAAe,GAAA,GAAA,CAAA;AAGlD,EAAA,MAAM,kBAAkB,aAAgB,GAAA,GAAA,KAAS,OAAO,aAAgB,GAAA,KAAA,CAAA,IAAY,iBAAiB,EAAM,GAAA,GAAA,CAAA,CAAA;AAE3G,EAAA,MAAM,iBAAiB,WAAc,GAAA,QAAA,CAAA;AAErC,EAAA,IAAI,cAAiB,GAAA,QAAA,CAAA;AAErB,EAAI,IAAA,aAAA,IAAiB,cAAkB,IAAA,EAAA,CAAA,KAAQ,WAC/C,EAAA;AAEI,IAAA,IAAI,kBAAkB,QACtB,EAAA;AACI,MAAiB,cAAA,GAAA,cAAA,CAAA;AAAA,KACrB,MAAA,IACS,mBAAmB,QAC5B,EAAA;AACI,MAAiB,cAAA,GAAA,aAAA,CAAA;AAAA,KAIrB,MAAA;AACI,MAAiB,cAAA,GAAAA,yBAAA,CAAa,aAAe,EAAA,cAAA,EAAgB,GAAG,CAAA,CAAA;AAAA,KACpE;AAAA,GACJ;AAEA,EAAA,OAAO,kBAAkB,WAAe,IAAA,EAAA,CAAA,CAAA;AAC5C;;;;;"}